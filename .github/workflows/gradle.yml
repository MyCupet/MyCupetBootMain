name: Java CI with Gradle and Docker Deploy

on:
  push:
    branches:
      - main  # 배포하려는 브랜치 이름으로 변경 가능
  pull_request:
    branches:
      - main  # 풀 리퀘스트가 올라오면 테스트 실행

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - name: Checkout 소스 코드
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Grant execute permission for Gradlew
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew clean build -x test

    - name: Build Docker image
      run: |
        docker build -t your-image-name .
        docker tag your-image-name your-docker-registry/your-image-name:latest

    - name: Login to Docker registry
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image to registry
      run: docker push your-docker-registry/your-image-name:latest

    - name: Deploy to NCP
      run: |
        curl -X POST \
          -H "Authorization: Basic ${{ secrets.NCP_AUTH }}" \
          -H "Content-Type: application/json" \
          -d '{"image": "your-docker-registry/your-image-name:latest", "name": "your-app-name"}' \
          https://ncloud.apigw.ntruss.com/vserver/v2/startServerInstances

    - name: Set Environment Variables
      env:
        SERVER_PORT: ${{ secrets.SERVER_PORT }}
        DISPATCH_IP: ${{ secrets.DISPATCH_IP }}
        DB_URL: ${{ secrets.DB_URL }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        S3_ACCESSKEY: ${{ secrets.S3_ACCESSKEY }}
        S3_SECRETKEY: ${{ secrets.S3_SECRETKEY }}
        API_KEY: ${{ secrets.API_KEY }}
        API_SECRET: ${{ secrets.API_SECRET }}
