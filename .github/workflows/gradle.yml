name: JAVA CI WITH GRADLE AND DOCKER DEPLOY

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  VER: ${{ github.sha }}
  SERVER_PORT: 9090

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Grant execute permission for Gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Display application.properties
        run: cat src/main/resources/application.properties

      - name: Login to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_TOKEN }}
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_REPO }}:${{ env.VER }} .

      - name: Push Docker image to registry
        run: docker push ${{ secrets.DOCKER_REPO }}:${{ env.VER }}

  deploy:
    needs: build
    name: Deploy
    runs-on: [self-hosted, label-go]
    steps:
      - name: Docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
  
      - name: Stop and remove existing container
        run: |
          docker stop my-cupet-boot-main || true
          docker rm my-cupet-boot-main || true
  
      - name: Pull Docker image from registry
        run: |
          docker pull "${{ secrets.DOCKER_REPO }}:${{ env.VER }}"
  
      - name: Run Docker container
        run: |
          docker run -d -p 9090:9090 \
            -e SERVER_PORT=${{ env.SERVER_PORT }} \
            -e DB_USERNAME="${{ secrets.DB_USERNAME }}" \
            -e DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
            -e DB_URL="${{secrets.DB_URL}}" \
            -e DISPATCH_IP="${{ secrets.DISPATCH.IP }}" \
            -e S3_ACCESSKEY="${{ secrets.S3_ACCESSKEY }}" \
            -e S3_SECRETKEY="${{ secrets.S3_SECRETKEY }}" \
            -e API_KEY="${{ secrets.API_KEY }}" \
            -e API_SECRET="${{ secrets.API_SECRET }}" \
            --name my-cupet-boot-main \
            "${{ secrets.DOCKER_REPO }}:${{ env.VER }}"
  
      - name: Clean up unused Docker images
        run: docker image prune -af
