name: JAVA CI WITH GRADLE AND DOCKER DEPLOY

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  VER: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-20.04
      
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Grant execute permission for Gradlew
        run: chmod +x ./gradlew

      - name: Inject Environment Variables into application.properties
        run: |
          echo "server.port=9090" >> src/main/resources/application.properties
          echo "dispatch_ip=${{ secrets.DISPATCH_IP }}" >> src/main/resources/application.properties
          echo "db_url=${{ secrets.DB_URL }}" >> src/main/resources/application.properties
          echo "db_username=${{ secrets.DB_USERNAME }}" >> src/main/resources/application.properties
          echo "db_password=${{ secrets.DB_PASSWORD }}" >> src/main/resources/application.properties
          echo "s3_accesskey=${{ secrets.S3_ACCESSKEY }}" >> src/main/resources/application.properties
          echo "s3_secretkey=${{ secrets.S3_SECRETKEY }}" >> src/main/resources/application.properties
          echo "api_key=${{ secrets.API_KEY }}" >> src/main/resources/application.properties
          echo "api_secret=${{ secrets.API_SECRET }}" >> src/main/resources/application.properties
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Login to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_TOKEN }}
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_REPO }}:${{ env.VER }} .

      - name: Push Docker image to registry
        run: docker push ${{ secrets.DOCKER_REPO }}:${{ env.VER }}

  deploy:
    needs: build
    name: Deploy
    runs-on: [self-host, label-go]
    steps:
      - name: Docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Stop and remove existing container
        run: |
          docker stop my-cupet-boot-main || true
          docker rm my-cupet-boot-main || true

      - name: Pull Docker image from registry
        run: |
          docker pull ${{ secrets.DOCKER_REPO }}:${{ env.VER }}

      - name: Run Docker container
        run: |
          docker run -d -p 9090:9090 --name my-cupet-boot-main ${{ secrets.DOCKER_REPO }}:${{ env.VER }}

      - name: Clean up unused Docker images
        run: docker image prune -af
