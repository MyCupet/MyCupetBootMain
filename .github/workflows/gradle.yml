name: Java CI with Gradle

on:
  push:
    branches:
      - main  # 배포하려는 브랜치 이름으로 변경 가능
  pull_request:
    branches:
      - main  # 풀 리퀘스트가 올라오면 테스트 실행

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout 소스 코드
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Grant execute permission for Gradlew
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew build --no-daemon

    #사용된 환경 변수
    - name: Set Environment
      env:
        SERVER_PORT: ${{secret.SERVER_PORT}}
        DISPATCH.IP: ${{secret.DISPATCH.IP}}
        DB_URL: ${{secret.DB_URL}}
        DB_USERNAME: ${{secret.DB_USERNAME}}
        DB_PASSWORD: ${{secret.DB_PASSWORD}}
        S3_ACCESSKEY: ${{secret.S3_ACCESSKEY}}
        S3_SECRETKEY: ${{secret.S3_SECRETKEY}}
        API_KEY: ${{secret.API_KEY}}
        API_SECRET: ${{secret.API_SECRET}}
        
        
        
        
    

      

    - name: Build Docker image
      run: |
        docker build -t your-docker-image-name .
        docker tag your-docker-image-name:latest your-docker-registry/your-docker-image-name:latest
        docker push your-docker-registry/your-docker-image-name:latest

    - name: Deploy to NCP
      env:
        NCP_ACCESS_KEY: ${{ secrets.NCP_ACCESS_KEY }}
        NCP_SECRET_KEY: ${{ secrets.NCP_SECRET_KEY }}
      run: |
        curl -X POST -H "Content-Type: application/json" -d '{
          "serverName": "your-server-name",
          "instanceNo": "0",
          "accessControlGroupConfigurationNoList": [
            {"accessControlGroupConfigurationNo": "your-access-control-group-id"}
          ],
          "userData": "your-user-data"
        }' -H "Authorization: Basic $(echo -n $NCP_ACCESS_KEY:$NCP_SECRET_KEY | base64)" https://ncloud.apigw.ntruss.com/server/v2/createServerInstances

