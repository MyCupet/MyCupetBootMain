name: Java CI with Gradle and Docker Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:  # Move the `env` declaration inside the `jobs` section
      SERVER_PORT: ${{ env.SERVER_PORT }}
      DISPATCH_IP: ${{ env.DISPATCH_IP }}
      DB_URL: ${{ env.DB_URL }}
      DB_USERNAME: ${{ env.DB_USERNAME }}
      DB_PASSWORD: ${{ env.DB_PASSWORD }}
      S3_ACCESSKEY: ${{ env.S3_ACCESSKEY }}
      S3_SECRETKEY: ${{ env.S3_SECRETKEY }}
      API_KEY: ${{ env.API_KEY }}
      API_SECRET: ${{ env.API_SECRET }}

    steps:
      - name: Checkout 소스 코드
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Grant execute permission for Gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Build Docker image
        run: |
          docker build -t my-cupet-boot-main .
          docker tag my-cupet-boot-main mydockerhubusername/my-cupet-boot-main:latest

      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to registry
        run: docker push mydockerhubusername/my-cupet-boot-main:latest

      - name: Deploy to NCP
        run: |
          curl -X POST \
            -u "${{ secrets.NCP_ACCESS_KEY }}:${{ secrets.NCP_SECRET_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"image": "mydockerhubusername/my-cupet-boot-main:latest", "name": "my-cupet-boot-main", "port": 9090}' \
            https://ncloud.apigw.ntruss.com/vserver/v2/startServerInstances

      - name: Set Environment Variables
        run: |
          echo "SERVER_PORT=9090" >> $GITHUB_ENV
          echo "DISPATCH_IP=${{ secrets.DISPATCH_IP }}" >> $GITHUB_ENV
          echo "DB_URL=${{ secrets.DB_URL }}" >> $GITHUB_ENV
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "S3_ACCESSKEY=${{ secrets.S3_ACCESSKEY }}" >> $GITHUB_ENV
          echo "S3_SECRETKEY=${{ secrets.S3_SECRETKEY }}" >> $GITHUB_ENV
          echo "API_KEY=${{ secrets.API_KEY }}" >> $GITHUB_ENV
          echo "API_SECRET=${{ secrets.API_SECRET }}" >> $GITHUB_ENV
